
(defwidget bar []
  (centerbox :class "bar"
             :orientation "h"
  (box :orientation "h"
       :valign "center"
       :class "bar"
       (workspaces))
  (box :orientation "h"
       :class "bar"
    (musicStatus))
  (box)))


(deflisten temperatures :initial ""
  "watch sensors -j")



( defwidget ram []
  (box
    "${round(EWW_RAM.used_mem_perc)}%"))



(deflisten music :initial ""
  "playerctl --player=%any,firefox --follow metadata --format '{{ artist }} - {{ title }}' || true"
)

(deflisten playing :initial ""
  "playerctl --player=%any,firefox --follow status")

(deflisten workspaces :initial "[]" "scripts/get-workspaces")
(deflisten current_workspace :initial "1" "scripts/get-active-workspaces")
(defwidget workspaces []
  (eventbox :onscroll "bash ./scripts/change-active-workspace {} ${current_workspace}" :class "workspaces-widget"
    (box :space-evenly false
      (label :text "${workspaces}${current_workspace}" :visible false)
      (for workspace in workspaces
        
        (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
          (box :class "workspace-entry ${workspace.id == current_workspace ? "workspaceFocused" : "workspaceUnfocused"} ${workspace.windows > 0 ? "occupied" : "empty"}"
               :visible {workspace.windows > 0 || workspace.id == current_workspace}
            (label :text "${workspace.id}")
            )
          )
        )
      )
    )
  )

;; (deflisten workspace "scripts/get-workspaces")
;;
;; (defwidget workspaces []
;;            (literal
;;             :content workspace))

(defwidget musicStatus []
  (revealer :class "music"
       :orientation "v"
       :space-evenly false
       :halign "center"
       ;; :visible {playing == "Playing"}
       :reveal {playing == "Playing"}
       :transition "crossfade"
       ;; :duration "2000ms"
    {music != "" ? "ÔÄÅ${music}" : ""}))



(defwindow bar
           :monitor 0
           :geometry (geometry :x "0%"
                               :y "6px"
                               :width "95%"
                               :height "25px"
                               :anchor "bottom center")
           :stacking "bottom"
           :focusable false
           :exclusive true
    (bar))

