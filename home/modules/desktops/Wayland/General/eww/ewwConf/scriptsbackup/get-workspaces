#!/usr/bin/env bash

#define icons for workspaces 1-9
ic=(0 1 2 3 4 5 6 7 8 9 10)
declare -A Occupied   #Occupied workspaces
declare -A FocusState #Focused State
for num in "${ic[@]}"; do
    Occupied[$num]=false
    FocusState[$num]=Unfocused
done
read -a initialWorkspaces <<<"$(hyprctl workspaces -j | jq .[]."id" -c | tr '\n' ' ')"

#initial check for occupied workspaces
for num in "${initialWorkspaces[@]}"; do
    Occupied[$num]=true
done

#initial check for focused workspace

for fnum in "$(hyprctl monitors | grep -B 4 "focused: yes" | awk 'NR==1{print $3}')'; do
FocusState[$fnum]="Focused"
export mon=$(hyprctl monitors | grep -B 2 "\($fnum\)" | awk 'NR==1{print $2}')
done

workspaces() {
if [[ ${1:0:9} == "workspace" ]] && [[ ${1:11} != "special" ]]; then #set focused workspace
    FocusState[$fnum]="Unfocused"
    fnum=${1:11}
    FocusState[$fnum]="Focused"

elif [[ ${1:0:10} == "focusedmon" ]]; then #set focused workspace following monitor focus change
    FocusState[$fnum]="Unfocused"
    string=${1:12}
    fnum=${string##*,}
    export mon=${string/,*/}
    FocusState[$fnum]="Focused"

elif [[ ${1:0:13} == "moveworkspace" ]] && [[ ${1##*,} == ""$mon ]]; then #Set focused workspace following swapactiveworkspace
    FocusState[$fnum]="Unfocused"
    string=${1:15}
    fnum=${string/,*/}
    FocusState[$fnum]="Focused"

elif [[ ${1:0:15} == "createworkspace" ]]; then #set Occupied workspace
    num=${1:17}
    Occupied[$num]=true

elif [[ ${1:0:16} == "destroyworkspace" ]]; then #unset unoccupied workspace
    num=${1:18}
    Occupied[$num]=false
fi
}
module() {
#output eww widget
echo "(eventbox :onscroll \"echo {} | sed -e 's/up/-1/g' -e 's/down/+1/g' | xargs hyprctl dispatch workspace\" :valign \"center\" \
          (box	:class \"works\"	:orientation \"h\" :spacing 5 :space-evenly \"false\" :halign \"left\"	\
              (button :visible "${Occupied[1]}" :onclick \"hyprctl dispatch workspace 1\" :onrightclick \"hyprctl dispatch workspace 1 \" :class \" workspace"${FocusState[1]}" \" \""${ic[1]}"\") \
              (button :visible "${Occupied[2]}" :onclick \"hyprctl dispatch workspace 2\" :onrightclick \"hyprctl dispatch workspace 2 \" :class \" workspace"${FocusState[2]}" \" \""${ic[2]}"\") \
              (button :visible "${Occupied[3]}" :onclick \"hyprctl dispatch workspace 3\" :onrightclick \"hyprctl dispatch workspace 3 \" :class \" workspace"${FocusState[3]}" \" \""${ic[3]}"\") \
              (button :visible "${Occupied[4]}" :onclick \"hyprctl dispatch workspace 4\" :onrightclick \"hyprctl dispatch workspace 4 \" :class \" workspace"${FocusState[4]}" \" \""${ic[4]}"\") \
              (button :visible "${Occupied[5]}" :onclick \"hyprctl dispatch workspace 5\" :onrightclick \"hyprctl dispatch workspace 5 \" :class \" workspace"${FocusState[5]}" \" \""${ic[5]}"\") \
              (button :visible "${Occupied[6]}" :onclick \"hyprctl dispatch workspace 6\" :onrightclick \"hyprctl dispatch workspace 6 \" :class \" workspace"${FocusState[6]}" \" \""${ic[6]}"\") \
              (button :visible "${Occupied[7]}" :onclick \"hyprctl dispatch workspace 7\" :onrightclick \"hyprctl dispatch workspace 7 \" :class \" workspace"${FocusState[7]}" \" \""${ic[7]}"\") \
              (button :visible "${Occupied[8]}" :onclick \"hyprctl dispatch workspace 8\" :onrightclick \"hyprctl dispatch workspace 8 \" :class \" workspace"${FocusState[8]}" \" \""${ic[8]}"\") \
              (button :visible "${Occupied[9]}" :onclick \"hyprctl dispatch workspace 9\" :onrightclick \"hyprctl dispatch workspace 9 \" :class \" workspace"${FocusState[9]}" \" \""${ic[9]}"\") \
              (button :visible "${Occupied[10]}" :onclick \"hyprctl dispatch workspace 10\" :onrightclick \"hyprctl dispatch workspace 10 \" :class \" workspace"${FocusState[10]}" \" \""${ic[10]}"\") \
          )\
        )"
}

module

socat -u UNIX-CONNECT:/tmp/hypr/""$HYPRLAND_INSTANCE_SIGNATURE/.socket2.sock - | while read -r event; do
workspaces ""$event
module
done
